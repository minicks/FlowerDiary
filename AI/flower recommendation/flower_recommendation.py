# -*- coding: utf-8 -*-
"""flower recommendation

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12aI6_s4hxypOZUAnEsTx0ZLQRtv7d6xp
"""

import pandas as pd
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer

data = pd.read_csv('flower.csv')
data.head()

#꽃말에서 키워드 추출
from rake_nltk import Rake
df['Key_words'] = ''
r = Rake()
for index, row in df.iterrows():
    r.extract_keywords_from_text(row['f_name'])
    key_words_dict_scores = r.get_word_degrees()
    row['Key_words'] = list(key_words_dict_scores.keys())

df['f_name'] = df['f_name'].map(lambda x: x.split(','))
df['f_language'] = df['f_language'].map(lambda x: x.split(',')[:3])
df['f_property'] = df['f_property'].map(lambda x: x.split(','))
for index, row in df.iterrows():
    row['f_name'] = [x.lower().replace(' ','') for x in row['f_name']]
    row['f_language'] = [x.lower().replace(' ','') for x in row['f_language']]
    row['f_property'] = [x.lower().replace(' ','') for x in row['genre']]

df['Bag_of_words'] = ''
columns = ['flowername', 'f_language', 'f_property']
for index, row in df.iterrows():
    words = ''
    for col in columns:
        words += ' '.join(row[col]) + ' '
    row['Bag_of_words'] = words
    
df = df[['f_name','Bag_of_words']]

count = CountVectorizer()
count_matrix = count.fit_transform(df['Bag_of_words'])
cosine_sim = cosine_similarity(count_matrix, count_matrix)
print(cosine_sim)

indices = pd.Series(df['f_name'])

def recommend(title, cosine_sim = cosine_sim):
    recommended_flower = []
    idx = indices[indices == title].index[0]
    score_series = pd.Series(cosine_sim[idx]).sort_values(ascending = False)
    top_10_indices = list(score_series.iloc[1:11].index)
    
    for i in top_10_indices:
        recommended_flower.append(list(df['f_name'])[i])
        
    return recommended_flower

#recommend('문장 키워드')